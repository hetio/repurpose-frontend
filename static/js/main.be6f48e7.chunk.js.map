{"version":3,"sources":["compound-table.js","data.js","compound-prediction-table.js","disease-table.js","disease-prediction-table.js","metapath-table.js","item-info.js","app.js","index.js"],"names":["CompoundTable","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","_this2","react_default","a","createElement","style","display","props","visible","className","toComma","data","length","build","text","showMore","icon","faAngleLeft","faAngleRight","onClick","setState","tooltipText","containerClass","defaultSortField","defaultSortUp","sortables","searchAllFields","fields","headContents","headStyles","width","headClasses","headTooltips","bodyTooltips","datum","field","compound_name","synonyms","split","slice","join","description","bodyContents","setCompound","compound","compound_id","index_es","faEye","opacity","fullValue","toFixed","bodyClasses","Component","compoundsUrl","diseasesUrl","metapathsUrl","_callee","compounds","diseases","metapaths","regenerator_default","wrap","_context","prev","next","fetch","sent","json","abrupt","assembleData","stop","results","newData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","newDatum","index","columns","push","err","return","CompoundPredictionTable","prevProps","then","_this3","id","disease_id","replace","url","cmd","Fragment","faExternalLinkAlt","link","document","target","href","click","remove","faCopy","copy","DiseaseTable","disease_name","setDisease","disease","DiseasePredictionTable","MetapathTable","toExponential","Math","pow","ItemInfo","apply","arguments","item","name","treats","palliates","total_edges","auroc","map","App","setTab","tab","updateUrl","params","URLSearchParams","set","window","location","origin","pathname","toString","history","pushState","get","title","loadStateFromUrl","search","newState","find","addEventListener","_fetchData","fetchData","rel","type","disabled","compound_table_CompoundTable","disease_table_DiseaseTable","item_info_ItemInfo","compound_prediction_table_CompoundPredictionTable","disease_prediction_table_DiseasePredictionTable","metapath_table_MetapathTable","render","app_App","getElementById"],"mappings":"6OAcaA,EAAb,SAAAC,GAEE,SAAAD,IAAc,IAAAE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACZE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,QAEKI,MAAQ,GAHDP,EAFhB,OAAAC,OAAAO,EAAA,EAAAP,CAAAH,EAAAC,GAAAE,OAAAQ,EAAA,EAAAR,CAAAH,EAAA,EAAAY,IAAA,SAAAC,MAAA,WASW,IAAAC,EAAAT,KACP,OACEU,EAAAC,EAAAC,cAAA,WAASC,MAAO,CAAEC,QAASd,KAAKe,MAAMC,QAAU,QAAU,SACxDN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACbP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,eACbC,kBAAQlB,KAAKe,MAAMI,KAAKC,QAD3B,YAGAV,EAAAC,EAAAC,cAACS,EAAA,WAAD,CACEC,KAAMtB,KAAKI,MAAMmB,SAAW,WAAa,SACzCC,KAAMxB,KAAKI,MAAMmB,SAAWE,cAAcC,eAC1CT,UAAU,oBACVU,QAAS,kBAAMlB,EAAKmB,SAAS,CAAEL,UAAWd,EAAKL,MAAMmB,YACrDM,YAAY,kBAGhBnB,EAAAC,EAAAC,cAACS,EAAA,MAAD,CACES,eACE9B,KAAKI,MAAMmB,SAAW,2BAA6B,kBAErDJ,KAAMnB,KAAKe,MAAMI,KACjBY,iBAAiB,SACjBC,cAAc,QACdC,UAAW,EAAC,GAAO,GAAM,GAAM,GAAM,GAAM,GAC3CC,iBAAiB,EACjBC,OAAQ,CACN,GACA,cACA,gBACA,SACA,cACA,SAEFC,aAAc,CAAC,GAAI,KAAM,OAAQ,SAAU,QAAS,SACpDC,WAAY,CACV,CAAEC,MAAO,IACT,CAAEA,MAAO,IACT,CAAEA,MAAO,KACT,CAAEA,MAAO,IACT,CAAEA,MAAO,IACT,CAAEA,MAAO,KAEXC,YAAa,CACX,GACA,aACA,aACA,QACA,QACA,SAEFC,aAAc,CAAC,GAAI,KAAM,OAAQ,SAAU,QAAS,SACpDC,aAAc,CACZ,SAACC,EAAOC,EAAOnC,GAAf,MACE,wBACAkC,EAAME,cACN,WACAF,EAAMG,SACHC,MAAM,OACNC,MAAM,EAAG,IACTC,KAAK,MACR,KACF,KACA,SAACN,EAAOC,EAAOnC,GAAf,OAAyBkC,EAAMO,cAEjCC,aAAc,CACZ,SAACR,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,OAAD,CACEJ,UAAU,eACVU,QAAS,WACPlB,EAAKM,MAAMoC,YAAYT,KAGxBjC,EAAKM,MAAMqC,UACZV,EAAMW,cAAgB5C,EAAKM,MAAMqC,SAASC,YACtC3C,EAAAC,EAAAC,cAAC0C,EAAA,gBAAD,CAAiBrC,UAAU,QAAQO,KAAM+B,UAEzC7C,EAAAC,EAAAC,cAAC0C,EAAA,gBAAD,CACErC,UAAU,QACVJ,MAAO,CAAE2C,QAAS,KAClBhC,KAAM+B,YAKhB,SAACb,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOE,EAAAC,EAAAC,cAAA,YAAOJ,GAAeiD,UAAWjD,KAExD,SAACkC,EAAOC,EAAOnC,GAAf,OAAyBE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOA,KAC9C,SAACkC,EAAOC,EAAOnC,GAAf,OAAyBE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOA,KAC9C,SAACkC,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOU,kBAAQV,GAAQiD,UAAWjD,KAElD,SAACkC,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CACEb,MAAOkD,kBAAgB,IAARlD,GAAe,IAC9BiD,UAAWjD,MAIjBmD,YAAa,CAAC,KAAM,aAAc,eA3G5ChE,EAAA,CAAmCiE,uDCd7BC,EACJ,mIACIC,EACJ,kIACIC,EACJ,8KAEK,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAAzD,EAAA0D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC0BC,MAAMZ,GADhC,cAAAS,EAAAE,KAAA,EAAAF,EAAAI,KAC+CC,OAD/C,cACCV,EADDK,EAAAI,KAAAJ,EAAAE,KAAA,EAEyBC,MAAMX,GAF/B,cAAAQ,EAAAE,KAAA,EAAAF,EAAAI,KAE6CC,OAF7C,cAECT,EAFDI,EAAAI,KAAAJ,EAAAE,KAAA,GAG0BC,MAAMV,GAHhC,eAAAO,EAAAE,KAAA,GAAAF,EAAAI,KAG+CC,OAH/C,eAGCR,EAHDG,EAAAI,KAAAJ,EAAAM,OAAA,SAKE,CACLX,UAAWY,EAAaZ,GACxBC,SAAUW,EAAaX,GACvBC,UAAWU,EAAaV,KARrB,yBAAAG,EAAAQ,SAAAd,6BAaA,SAASa,EAAaE,GAC3B,IAAMC,EAAU,GADoBC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEpC,QAAAC,EAAAC,EAAoBP,EAAQ5D,KAA5BoE,OAAAC,cAAAP,GAAAI,EAAAC,EAAAd,QAAAiB,MAAAR,GAAA,EAAkC,CAEhC,IAFgC,IAAvBvC,EAAuB2C,EAAA7E,MAC1BkF,EAAW,GAEXC,EAAQ,EACZA,EAAQZ,EAAQa,QAAQxE,QAAUuE,EAAQjD,EAAMtB,OAChDuE,IAEAD,EAASX,EAAQa,QAAQD,IAAUjD,EAAMiD,GAE3CX,EAAQa,KAAKH,IAXqB,MAAAI,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GAapC,OAAOH,EClBT,IAGagB,EAAb,SAAApG,GAEE,SAAAoG,EAAYjF,GAAO,IAAAlB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgG,IACjBnG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkG,GAAA7F,KAAAH,KAAMe,KAEDX,MAAQ,GACbP,EAAKO,MAAMe,KAAO,GAJDtB,EAFrB,OAAAC,OAAAO,EAAA,EAAAP,CAAAkG,EAAApG,GAAAE,OAAAQ,EAAA,EAAAR,CAAAkG,EAAA,EAAAzF,IAAA,qBAAAC,MAAA,SAUqByF,GAAW,IAAAxF,EAAAT,MAEzBA,KAAKe,MAAMqC,UAAY,IAAIC,eAC3B4C,EAAU7C,UAAY,IAAIC,aAE3BoB,MAjBJ,8HAiBoBzE,KAAKe,MAAMqC,SAASC,YAAc,SAC/C6C,KAAK,SAACnB,GAAD,OAAaA,EAAQJ,SAC1BuB,KAAK,SAACnB,GACLtE,EAAKmB,SAAS,CAAET,KAAM0D,EAAaE,SAlB7C,CAAAxE,IAAA,SAAAC,MAAA,WAwBW,IAAA2F,EAAAnG,KACP,OACEU,EAAAC,EAAAC,cAAA,WAASC,MAAO,CAAEC,QAASd,KAAKe,MAAMC,QAAU,QAAU,SACxDN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACbP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,eACbC,kBAAQlB,KAAKI,MAAMe,KAAKC,QAD3B,YAGAV,EAAAC,EAAAC,cAACS,EAAA,WAAD,CACEC,KAAMtB,KAAKI,MAAMmB,SAAW,WAAa,SACzCC,KAAMxB,KAAKI,MAAMmB,SAAWE,cAAcC,eAC1CT,UAAU,oBACVU,QAAS,kBAAMwE,EAAKvE,SAAS,CAAEL,UAAW4E,EAAK/F,MAAMmB,YACrDM,YAAY,kBAGhBnB,EAAAC,EAAAC,cAACS,EAAA,MAAD,CACES,eACE9B,KAAKI,MAAMmB,SAAW,2BAA6B,kBAErDJ,KAAMnB,KAAKI,MAAMe,KACjBY,iBAAiB,aACjBC,cAAc,OACdC,UAAW,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAChDC,iBAAiB,EACjBC,OAAQ,CACN,eACA,aACA,sBACA,qBACA,WACA,WACA,IAEFC,aAAc,CACZ,OACA,SACA,YACA,WACA,MACA,SACA,iBAEFC,WAAY,CACV,CAAEC,MAAO,KACT,CAAEA,MAAO,IACT,CAAEA,MAAO,IACT,CAAEA,MAAO,IACT,CAAEA,MAAO,IACT,CAAEA,MAAO,IACT,CAAEA,MAAO,MAEXC,YAAa,CACX,aACA,QACA,QACA,QACA,QACA,QACA,SAEFC,aAAc,CACZ,eACA,aACA,sBACA,qBACA,WACA,mBACA,iBAEFC,aAAc,CAAC,SAACC,EAAOC,EAAOnC,GAAf,OAAyBkC,EAAMO,cAC9CC,aAAc,CACZ,SAACR,EAAOC,EAAOnC,GAAf,OAAyBE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOA,KAC9C,SAACkC,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CACEb,MAAOkD,kBAAgB,IAARlD,GAAe,IAC9BiD,UAAWjD,KAGf,SAACkC,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CACEb,MAAOkD,kBAAgB,IAARlD,GAAe,IAC9BiD,UAAWjD,KAGf,SAACkC,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CACEb,MAAOkD,kBAAgB,IAARlD,GAAe,IAC9BiD,UAAWjD,KAGf,SAACkC,EAAOC,EAAOnC,GAAf,OAAyBE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOA,KAC9C,SAACkC,EAAOC,EAAOnC,GAAf,OAAyBE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOA,KAC9C,SAACkC,EAAOC,EAAOnC,GACb,IAAM4F,EACJD,EAAKpF,MAAMqC,SAASC,YACpB,IACAX,EAAM2D,WAAWC,QAAQ,IAAK,KAC9B,QACIC,EACJ,8EACAH,EACII,EAAM,yCAA2CJ,EAEvD,OACE1F,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8F,SAAA,KACE/F,EAAAC,EAAAC,cAACS,EAAA,WAAD,CACEJ,UAAU,qBACVO,KAAMkF,oBACNpF,KAAK,UACLK,QAAS,WACP,IAAMgF,EAAOC,SAAShG,cAAc,KACpC+F,EAAKE,OAAS,SACdF,EAAKG,KAAOP,EACZI,EAAKI,QACLJ,EAAKK,YAGTtG,EAAAC,EAAAC,cAACS,EAAA,WAAD,CACEJ,UAAU,sCACVO,KAAMyF,SACN3F,KAAK,UACLK,QAAS,kBAAMuF,IAAKV,SAM9B7C,YAAa,CAAC,eAvJxBqC,EAAA,CAA6CpC,aCJhCuD,EAAb,SAAAvH,GAEE,SAAAuH,IAAc,IAAAtH,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmH,IACZtH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqH,GAAAhH,KAAAH,QAEKI,MAAQ,GAHDP,EAFhB,OAAAC,OAAAO,EAAA,EAAAP,CAAAqH,EAAAvH,GAAAE,OAAAQ,EAAA,EAAAR,CAAAqH,EAAA,EAAA5G,IAAA,SAAAC,MAAA,WASW,IAAAC,EAAAT,KACP,OACEU,EAAAC,EAAAC,cAAA,WAASC,MAAO,CAAEC,QAASd,KAAKe,MAAMC,QAAU,QAAU,SACxDN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACbP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,eACbC,kBAAQlB,KAAKe,MAAMI,KAAKC,QAD3B,YAGAV,EAAAC,EAAAC,cAACS,EAAA,WAAD,CACEC,KAAMtB,KAAKI,MAAMmB,SAAW,WAAa,SACzCC,KAAMxB,KAAKI,MAAMmB,SAAWE,cAAcC,eAC1CT,UAAU,oBACVU,QAAS,kBAAMlB,EAAKmB,SAAS,CAAEL,UAAWd,EAAKL,MAAMmB,YACrDM,YAAY,kBAGhBnB,EAAAC,EAAAC,cAACS,EAAA,MAAD,CACES,eACE9B,KAAKI,MAAMmB,SAAW,2BAA6B,kBAErDJ,KAAMnB,KAAKe,MAAMI,KACjBY,iBAAiB,SACjBC,cAAc,QACdC,UAAW,EAAC,GAAO,GAAM,GAAM,GAAM,GAAM,GAC3CC,iBAAiB,EACjBC,OAAQ,CACN,GACA,aACA,eACA,SACA,cACA,SAEFC,aAAc,CAAC,GAAI,KAAM,OAAQ,SAAU,QAAS,SACpDC,WAAY,CACV,CAAEC,MAAO,IACT,CAAEA,MAAO,IACT,CAAEA,MAAO,KACT,CAAEA,MAAO,IACT,CAAEA,MAAO,IACT,CAAEA,MAAO,KAEXC,YAAa,CACX,GACA,aACA,aACA,QACA,QACA,SAEFC,aAAc,CAAC,GAAI,KAAM,OAAQ,SAAU,QAAS,SACpDC,aAAc,CACZ,SAACC,EAAOC,EAAOnC,GAAf,MACE,wBACAkC,EAAM0E,aACN,WACA1E,EAAMG,SACHC,MAAM,OACNC,MAAM,EAAG,IACTC,KAAK,MACR,KACF,KACA,SAACN,EAAOC,EAAOnC,GAAf,OAAyBkC,EAAMO,cAEjCC,aAAc,CACZ,SAACR,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,OAAD,CACEJ,UAAU,eACVU,QAAS,WACPlB,EAAKM,MAAMsG,WAAW3E,KAGvBjC,EAAKM,MAAMuG,SACZ5E,EAAM2D,aAAe5F,EAAKM,MAAMuG,QAAQjB,WACpC3F,EAAAC,EAAAC,cAAC0C,EAAA,gBAAD,CAAiBrC,UAAU,QAAQO,KAAM+B,UAEzC7C,EAAAC,EAAAC,cAAC0C,EAAA,gBAAD,CACErC,UAAU,QACVJ,MAAO,CAAE2C,QAAS,KAClBhC,KAAM+B,YAKhB,SAACb,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOE,EAAAC,EAAAC,cAAA,YAAOJ,GAAeiD,UAAWjD,KAExD,SAACkC,EAAOC,EAAOnC,GAAf,OAAyBE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOA,KAC9C,SAACkC,EAAOC,EAAOnC,GAAf,OAAyBE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOA,KAC9C,SAACkC,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOU,kBAAQV,GAAQiD,UAAWjD,KAElD,SAACkC,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CACEb,MAAOkD,kBAAgB,IAARlD,GAAe,IAC9BiD,UAAWjD,MAIjBmD,YAAa,CAAC,KAAM,aAAc,eA3G5CwD,EAAA,CAAkCvD,aCIrB2D,EAAb,SAAA3H,GAEE,SAAA2H,EAAYxG,GAAO,IAAAlB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuH,IACjB1H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyH,GAAApH,KAAAH,KAAMe,KAEDX,MAAQ,GACbP,EAAKO,MAAMe,KAAO,GAJDtB,EAFrB,OAAAC,OAAAO,EAAA,EAAAP,CAAAyH,EAAA3H,GAAAE,OAAAQ,EAAA,EAAAR,CAAAyH,EAAA,EAAAhH,IAAA,qBAAAC,MAAA,SAUqByF,GAAW,IAAAxF,EAAAT,MAEzBA,KAAKe,MAAMuG,SAAW,IAAIjB,cAC1BJ,EAAUqB,SAAW,IAAIjB,YAE1B5B,MAjBJ,6HAiBoBzE,KAAKe,MAAMuG,QAAQjB,WAAWC,QAAQ,IAAK,KAAO,SAC/DJ,KAAK,SAACnB,GAAD,OAAaA,EAAQJ,SAC1BuB,KAAK,SAACnB,GACLtE,EAAKmB,SAAS,CAAET,KAAM0D,EAAaE,SAlB7C,CAAAxE,IAAA,SAAAC,MAAA,WAwBW,IAAA2F,EAAAnG,KACP,OACEU,EAAAC,EAAAC,cAAA,WAASC,MAAO,CAAEC,QAASd,KAAKe,MAAMC,QAAU,QAAU,SACxDN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACbP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,eACbC,kBAAQlB,KAAKI,MAAMe,KAAKC,QAD3B,YAGAV,EAAAC,EAAAC,cAACS,EAAA,WAAD,CACEC,KAAMtB,KAAKI,MAAMmB,SAAW,WAAa,SACzCC,KAAMxB,KAAKI,MAAMmB,SAAWE,cAAcC,eAC1CT,UAAU,oBACVU,QAAS,kBAAMwE,EAAKvE,SAAS,CAAEL,UAAW4E,EAAK/F,MAAMmB,YACrDM,YAAY,kBAGhBnB,EAAAC,EAAAC,cAACS,EAAA,MAAD,CACES,eACE9B,KAAKI,MAAMmB,SAAW,2BAA6B,kBAErDJ,KAAMnB,KAAKI,MAAMe,KACjBY,iBAAiB,aACjBC,cAAc,OACdC,UAAW,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAChDC,iBAAiB,EACjBC,OAAQ,CACN,gBACA,aACA,sBACA,qBACA,WACA,WACA,IAEFC,aAAc,CACZ,OACA,SACA,YACA,WACA,MACA,SACA,iBAEFC,WAAY,CACV,CAAEC,MAAO,KACT,CAAEA,MAAO,IACT,CAAEA,MAAO,IACT,CAAEA,MAAO,IACT,CAAEA,MAAO,IACT,CAAEA,MAAO,IACT,CAAEA,MAAO,MAEXC,YAAa,CACX,aACA,QACA,QACA,QACA,QACA,QACA,SAEFC,aAAc,CACZ,eACA,aACA,sBACA,qBACA,WACA,mBACA,oDAEFC,aAAc,CAAC,SAACC,EAAOC,EAAOnC,GAAf,OAAyBkC,EAAMO,cAC9CC,aAAc,CACZ,SAACR,EAAOC,EAAOnC,GAAf,OAAyBE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOA,KAC9C,SAACkC,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CACEb,MAAOkD,kBAAgB,IAARlD,GAAe,IAC9BiD,UAAWjD,KAGf,SAACkC,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CACEb,MAAOkD,kBAAgB,IAARlD,GAAe,IAC9BiD,UAAWjD,KAGf,SAACkC,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CACEb,MAAOkD,kBAAgB,IAARlD,GAAe,IAC9BiD,UAAWjD,KAGf,SAACkC,EAAOC,EAAOnC,GAAf,OAAyBE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOA,KAC9C,SAACkC,EAAOC,EAAOnC,GAAf,OAAyBE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOA,KAC9C,SAACkC,EAAOC,EAAOnC,GACb,IAAM4F,EACJ1D,EAAMW,YACN,IACA8C,EAAKpF,MAAMuG,QAAQjB,WAAWC,QAAQ,IAAK,KAC3C,QACIC,EACJ,8EACAH,EACII,EAAM,yCAA2CJ,EAEvD,OACE1F,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8F,SAAA,KACE/F,EAAAC,EAAAC,cAACS,EAAA,WAAD,CACEJ,UAAU,qBACVO,KAAMkF,oBACNpF,KAAK,UACLK,QAAS,WACP,IAAMgF,EAAOC,SAAShG,cAAc,KACpC+F,EAAKE,OAAS,SACdF,EAAKG,KAAOP,EACZI,EAAKI,QACLJ,EAAKK,YAGTtG,EAAAC,EAAAC,cAACS,EAAA,WAAD,CACEJ,UAAU,sCACVO,KAAMyF,SACN3F,KAAK,UACLK,QAAS,kBAAMuF,IAAKV,SAM9B7C,YAAa,CAAC,eAvJxB4D,EAAA,CAA4C3D,aCN/B4D,EAAb,SAAA5H,GAEE,SAAA4H,EAAYzG,GAAO,IAAAlB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwH,IACjB3H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0H,GAAArH,KAAAH,KAAMe,KAEDX,MAAQ,GAHIP,EAFrB,OAAAC,OAAAO,EAAA,EAAAP,CAAA0H,EAAA5H,GAAAE,OAAAQ,EAAA,EAAAR,CAAA0H,EAAA,EAAAjH,IAAA,SAAAC,MAAA,WASW,IAAAC,EAAAT,KACP,OACEU,EAAAC,EAAAC,cAAA,WAASC,MAAO,CAAEC,QAASd,KAAKe,MAAMC,QAAU,QAAU,SACxDN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACbP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,eACbC,kBAAQlB,KAAKe,MAAMI,KAAKC,QAD3B,YAGAV,EAAAC,EAAAC,cAACS,EAAA,WAAD,CACEC,KAAMtB,KAAKI,MAAMmB,SAAW,WAAa,SACzCC,KAAMxB,KAAKI,MAAMmB,SAAWE,cAAcC,eAC1CT,UAAU,oBACVU,QAAS,kBAAMlB,EAAKmB,SAAS,CAAEL,UAAWd,EAAKL,MAAMmB,YACrDM,YAAY,kBAGhBnB,EAAAC,EAAAC,cAACS,EAAA,MAAD,CACES,eACE9B,KAAKI,MAAMmB,SAAW,2BAA6B,kBAErDQ,iBAAiB,SACjBC,cAAc,QACdb,KAAMnB,KAAKe,MAAMI,KACjBc,UAAW,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1CE,OAAQ,CACN,WACA,UACA,SACA,cACA,0BACA,QAEFC,aAAc,CACZ,SACA,WACA,MACA1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8F,SAAA,qBACA/F,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8F,SAAA,KACE/F,EAAAC,EAAAC,cAAA,cADF,UAGA,QAEFyB,WAAY,CACV,CAAEC,MAAO,KACT,CAAEA,MAAO,KACT,CAAEA,MAAO,IACT,CAAEA,MAAO,KACT,CAAEA,MAAO,KACT,CAAEA,MAAO,MAEXC,YAAa,CACX,QACA,aACA,QACA,QACA,QACA,SAEFC,aAAc,CACZ,eACA,uBACA,kBACA,0BACA,0BACA,eAEFU,aAAc,CACZ,SAACR,EAAOC,EAAOnC,GAAf,OAAyBE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOA,KAC9C,SAACkC,EAAOC,EAAOnC,GAAf,OAAyBE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOA,KAC9C,SAACkC,EAAOC,EAAOnC,GAAf,OAAyBE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOA,KAC9C,SAACkC,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CACEb,MAAOkD,kBAAgB,IAARlD,GAAe,IAC9BiD,UAAWjD,KAGf,SAACkC,EAAOC,EAAOnC,GAAf,OACEE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CACEb,MAAOiH,wBAAcC,KAAKC,IAAI,IAAKnH,IACnCiD,UAAWiE,KAAKC,IAAI,IAAKnH,MAG7B,SAACkC,EAAOC,EAAOnC,GAAf,OAAyBE,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOA,MAEhDmD,YAAa,CAAC,QAAS,qBA5FjC6D,EAAA,CAAmC5D,aCJtBgE,EAAb,SAAAhI,GAAA,SAAAgI,IAAA,OAAA9H,OAAAC,EAAA,EAAAD,CAAAE,KAAA4H,GAAA9H,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8H,GAAAC,MAAA7H,KAAA8H,YAAA,OAAAhI,OAAAO,EAAA,EAAAP,CAAA8H,EAAAhI,GAAAE,OAAAQ,EAAA,EAAAR,CAAA8H,EAAA,EAAArH,IAAA,SAAAC,MAAA,WAEI,IAAMuH,EAAO/H,KAAKe,MAAMgH,KACxB,IAAKA,EACH,OAAOrH,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8F,SAAA,MAET,IAAMuB,EAAOD,EAAKnF,eAAiBmF,EAAKX,cAAgB,GAClDjF,EAAS,CACb,CAAC,KAAM4F,EAAK1E,aAAe0E,EAAK1B,YAAc,IAC9C,CAAC,cAAe0B,EAAK9E,aAAe,IACpC,CAAC,WAAY8E,EAAKlF,UAAY,IAC9B,CAAC,SAAUkF,EAAKE,QAChB,CAAC,YAAaF,EAAKG,WACnB,CAAC,gBAAiBhH,kBAAQ6G,EAAKI,cAC/B,CAAC,QAASzE,kBAA4B,KAAnBqE,EAAKK,OAAS,IAAY,MAG/C,OACE1H,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8F,SAAA,KACE/F,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAASC,MAAO,CAAEC,QAASd,KAAKe,MAAMC,QAAU,QAAU,SACxDN,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QAAb,cACaP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,YAAY+G,GADzC,KAGAtH,EAAAC,EAAAC,cAAA,SAAOK,UAAU,cACfP,EAAAC,EAAAC,cAAA,aACGuB,EAAOkG,IAAI,SAAC1F,EAAOgD,GAAR,OACVjF,EAAAC,EAAAC,cAAA,MAAIL,IAAKoF,GACPjF,EAAAC,EAAAC,cAAA,MAAIK,UAAU,oBAAoB0B,EAAM,IACxCjC,EAAAC,EAAAC,cAAA,MAAIK,UAAU,cACZP,EAAAC,EAAAC,cAACS,EAAA,aAAD,CAAcb,MAAOmC,EAAM,YAOvCjC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QAAb,4BAC2BP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,YAAY+G,GADvD,UAtCRJ,EAAA,CAA8BhE,aCOjB0E,SAAb,SAAA1I,GAEE,SAAA0I,IAAc,IAAAzI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsI,IACZzI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwI,GAAAnI,KAAAH,QA0BFuI,OAAS,SAACC,GACR3I,EAAK+B,SAAS,CAAE4G,IAAKA,GAAO3I,EAAK4I,YA5BrB5I,EAgCdsD,YAAc,SAACC,GACbvD,EAAK+B,SAAS,CAAEwB,SAAUA,GAAYvD,EAAK4I,YAjC/B5I,EAqCdwH,WAAa,SAACC,GACZzH,EAAK+B,SAAS,CAAE0F,QAASA,GAAWzH,EAAK4I,YAtC7B5I,EA0Cd4I,UAAY,WACV,IAAMC,EAAS,IAAIC,gBACnBD,EAAOE,IAAI,MAAO/I,EAAKO,MAAMoI,KACN,cAAnB3I,EAAKO,MAAMoI,KAAuB3I,EAAKO,MAAMgD,UAC/CsF,EAAOE,IAAI,KAAM/I,EAAKO,MAAMgD,SAASC,aAChB,aAAnBxD,EAAKO,MAAMoI,KAAsB3I,EAAKO,MAAMkH,SAC9CoB,EAAOE,IAAI,KAAM/I,EAAKO,MAAMkH,QAAQjB,WAAWC,QAAQ,IAAK,MAE9D,IAAMC,EACJsC,OAAOC,SAASC,OAChBF,OAAOC,SAASE,SAChB,IACAN,EAAOO,WACTJ,OAAOK,QAAQC,UAAU,GAAI,GAAI5C,GAE7BmC,EAAOU,IAAI,QACbxC,SAASyC,MAAQX,EAAOU,IAAI,QA1DlBvJ,EA8DdyJ,iBAAmB,WACjB,IAAMZ,EAAS,IAAIC,gBAAgBE,OAAOC,SAASS,QAC7CC,EAAW,GACbd,EAAOU,IAAI,SACbI,EAAShB,IAAME,EAAOU,IAAI,QAC5B,IAAIhD,EAAKsC,EAAOU,IAAI,MACC,cAAjBI,EAAShB,MACXgB,EAASpG,SAAWvD,EAAKO,MAAM6D,UAAUwF,KACvC,SAACrG,GAAD,OAAcA,EAASC,cAAgB+C,KAGtB,aAAjBoD,EAAShB,MACPpC,IACFA,EAAKA,EAAGE,QAAQ,IAAK,MACvBkD,EAASlC,QAAUzH,EAAKO,MAAM8D,SAASuF,KACrC,SAACnC,GAAD,OAAaA,EAAQjB,aAAeD,KAIxCvG,EAAK+B,SAAS4H,IA9Ed3J,EAAKO,MAAQ,GACbP,EAAKO,MAAMoI,IAAM,YACjB3I,EAAKO,MAAMgD,SAAW,KACtBvD,EAAKO,MAAMkH,QAAU,KACrBzH,EAAKO,MAAM6D,UAAY,GACvBpE,EAAKO,MAAM8D,SAAW,GACtBrE,EAAKO,MAAM+D,UAAY,GAGvB0E,OAAOa,iBAAiB,WAAY7J,EAAKyJ,kBNtBtC,WAAP,OAAAK,EAAA9B,MAAA7H,KAAA8H,WMwBI8B,GAAY1D,KAAK,SAACnB,GAChBlF,EAAK+B,SACH,CACEqC,UAAWc,EAAQd,UACnBC,SAAUa,EAAQb,SAClBC,UAAWY,EAAQZ,WAErBtE,EAAKyJ,oBArBGzJ,EAFhB,OAAAC,OAAAO,EAAA,EAAAP,CAAAwI,EAAA1I,GAAAE,OAAAQ,EAAA,EAAAR,CAAAwI,EAAA,EAAA/H,IAAA,SAAAC,MAAA,WAuFW,IAAAC,EAAAT,KACP,OACEU,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8F,SAAA,KAEE/F,EAAAC,EAAAC,cAAA,QACEiJ,IAAI,aACJC,KAAK,WACLhD,KAAK,8BAEPpG,EAAAC,EAAAC,cAACS,EAAA,OAAD,CACEJ,UAAU,aACV8I,SAA6B,cAAnB/J,KAAKI,MAAMoI,IACrB7G,QAAS,kBAAMlB,EAAK8H,OAAO,eAH7B,aAOA7H,EAAAC,EAAAC,cAACS,EAAA,OAAD,CACEJ,UAAU,aACV8I,SAA6B,aAAnB/J,KAAKI,MAAMoI,IACrB7G,QAAS,kBAAMlB,EAAK8H,OAAO,cAH7B,YAOA7H,EAAAC,EAAAC,cAACS,EAAA,OAAD,CACEJ,UAAU,aACV8I,SAA6B,cAAnB/J,KAAKI,MAAMoI,IACrB7G,QAAS,kBAAMlB,EAAK8H,OAAO,eAH7B,aAQA7H,EAAAC,EAAAC,cAACoJ,EAAD,CACE7I,KAAMnB,KAAKI,MAAM6D,UACjBjD,QAA4B,cAAnBhB,KAAKI,MAAMoI,IACpBrF,YAAanD,KAAKmD,YAClBC,SAAUpD,KAAKI,MAAMgD,WAEvB1C,EAAAC,EAAAC,cAACqJ,EAAD,CACE9I,KAAMnB,KAAKI,MAAM8D,SACjBlD,QAA4B,aAAnBhB,KAAKI,MAAMoI,IACpBnB,WAAYrH,KAAKqH,WACjBC,QAAStH,KAAKI,MAAMkH,UAEtB5G,EAAAC,EAAAC,cAACsJ,EAAD,CACElJ,QACqB,cAAnBhB,KAAKI,MAAMoI,KAA0C,aAAnBxI,KAAKI,MAAMoI,IAE/CT,KACqB,cAAnB/H,KAAKI,MAAMoI,IACPxI,KAAKI,MAAMgD,SACQ,aAAnBpD,KAAKI,MAAMoI,IACTxI,KAAKI,MAAMkH,QACX,OAGV5G,EAAAC,EAAAC,cAACuJ,EAAD,CACEnJ,QAA4B,cAAnBhB,KAAKI,MAAMoI,KAAuBxI,KAAKI,MAAMgD,SACtDA,SAAUpD,KAAKI,MAAMgD,WAEvB1C,EAAAC,EAAAC,cAACwJ,EAAD,CACEpJ,QAA4B,aAAnBhB,KAAKI,MAAMoI,KAAsBxI,KAAKI,MAAMkH,QACrDA,QAAStH,KAAKI,MAAMkH,UAEtB5G,EAAAC,EAAAC,cAACyJ,EAAD,CACElJ,KAAMnB,KAAKI,MAAM+D,UACjBnD,QAA4B,cAAnBhB,KAAKI,MAAMoI,WAxJ9BF,EAAA,CAAyB1E,cCTzB0G,iBAAO5J,EAAAC,EAAAC,cAAC2J,EAAD,MAAS3D,SAAS4D,eAAe","file":"static/js/main.be6f48e7.chunk.js","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\nimport { IconButton } from 'hetio-frontend-components';\nimport { DynamicField } from 'hetio-frontend-components';\nimport { Table } from 'hetio-frontend-components';\nimport { Button } from 'hetio-frontend-components';\nimport { toComma } from 'hetio-frontend-components';\nimport { toFixed } from 'hetio-frontend-components';\n\nexport class CompoundTable extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n  }\n\n  // display component\n  render() {\n    return (\n      <section style={{ display: this.props.visible ? 'block' : 'none' }}>\n        <div className='table_attic'>\n          <span className='small light'>\n            {toComma(this.props.data.length)} entries\n          </span>\n          <IconButton\n            text={this.state.showMore ? 'collapse' : 'expand'}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={() => this.setState({ showMore: !this.state.showMore })}\n            tooltipText='Expand table'\n          />\n        </div>\n        <Table\n          containerClass={\n            this.state.showMore ? 'table_container_expanded' : 'table_container'\n          }\n          data={this.props.data}\n          defaultSortField='treats'\n          defaultSortUp='false'\n          sortables={[false, true, true, true, true, true]}\n          searchAllFields={true}\n          fields={[\n            '',\n            'compound_id',\n            'compound_name',\n            'treats',\n            'total_edges',\n            'auroc'\n          ]}\n          headContents={['', 'ID', 'Name', 'Treats', 'Edges', 'AUROC']}\n          headStyles={[\n            { width: 35 },\n            { width: 65 },\n            { width: 200 },\n            { width: 75 },\n            { width: 75 },\n            { width: 75 }\n          ]}\n          headClasses={[\n            '',\n            'small left',\n            'small left',\n            'small',\n            'small',\n            'small'\n          ]}\n          headTooltips={['', 'ID', 'Name', 'Treats', 'Edges', 'AUROC']}\n          bodyTooltips={[\n            (datum, field, value) =>\n              'See predictions for \"' +\n              datum.compound_name +\n              '\" \\n\\n (' +\n              datum.synonyms\n                .split(' | ')\n                .slice(0, 20)\n                .join(', ') +\n              ')',\n            null,\n            (datum, field, value) => datum.description\n          ]}\n          bodyContents={[\n            (datum, field, value) => (\n              <Button\n                className='check_button'\n                onClick={() => {\n                  this.props.setCompound(datum);\n                }}\n              >\n                {this.props.compound &&\n                datum.compound_id === this.props.compound.compound_id ? (\n                    <FontAwesomeIcon className='fa-xs' icon={faEye} />\n                  ) : (\n                    <FontAwesomeIcon\n                      className='fa-xs'\n                      style={{ opacity: 0.15 }}\n                      icon={faEye}\n                    />\n                  )}\n              </Button>\n            ),\n            (datum, field, value) => (\n              <DynamicField value={<code>{value}</code>} fullValue={value} />\n            ),\n            (datum, field, value) => <DynamicField value={value} />,\n            (datum, field, value) => <DynamicField value={value} />,\n            (datum, field, value) => (\n              <DynamicField value={toComma(value)} fullValue={value} />\n            ),\n            (datum, field, value) => (\n              <DynamicField\n                value={toFixed(value * 100) + '%'}\n                fullValue={value}\n              />\n            )\n          ]}\n          bodyClasses={[null, 'small left', 'left']}\n        />\n      </section>\n    );\n  }\n}\n","const compoundsUrl =\n  'https://raw.githubusercontent.com/dhimmel/het.io-rep-data/1a960f0e353586f8fe9f61b569919f24603d4344/browser-tables/compounds.json';\nconst diseasesUrl =\n  'https://raw.githubusercontent.com/dhimmel/het.io-rep-data/1a960f0e353586f8fe9f61b569919f24603d4344/browser-tables/diseases.json';\nconst metapathsUrl =\n  'https://raw.githubusercontent.com/dhimmel/het.io-rep-data/1a960f0e353586f8fe9f61b569919f24603d4344/browser-tables/metapaths.json';\n\nexport async function fetchData() {\n  const compounds = await (await fetch(compoundsUrl)).json();\n  const diseases = await (await fetch(diseasesUrl)).json();\n  const metapaths = await (await fetch(metapathsUrl)).json();\n\n  return {\n    compounds: assembleData(compounds),\n    diseases: assembleData(diseases),\n    metapaths: assembleData(metapaths)\n  };\n}\n\n// turn json data into expected format\nexport function assembleData(results) {\n  const newData = [];\n  for (const datum of results.data) {\n    const newDatum = {};\n    for (\n      let index = 0;\n      index < results.columns.length && index < datum.length;\n      index++\n    )\n      newDatum[results.columns[index]] = datum[index];\n\n    newData.push(newDatum);\n  }\n  return newData;\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\nimport copy from 'copy-to-clipboard';\n\nimport { IconButton } from 'hetio-frontend-components';\nimport { assembleData } from './data.js';\nimport { DynamicField } from 'hetio-frontend-components';\nimport { Table } from 'hetio-frontend-components';\nimport { toComma } from 'hetio-frontend-components';\nimport { toFixed } from 'hetio-frontend-components';\n\nconst dataUrl =\n  'https://raw.githubusercontent.com/dhimmel/het.io-rep-data/1a960f0e353586f8fe9f61b569919f24603d4344/browser-tables/compound/';\n\nexport class CompoundPredictionTable extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.data = [];\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (\n      (this.props.compound || {}).compound_id !==\n      (prevProps.compound || {}).compound_id\n    ) {\n      fetch(dataUrl + this.props.compound.compound_id + '.json')\n        .then((results) => results.json())\n        .then((results) => {\n          this.setState({ data: assembleData(results) });\n        });\n    }\n  }\n\n  // display component\n  render() {\n    return (\n      <section style={{ display: this.props.visible ? 'block' : 'none' }}>\n        <div className='table_attic'>\n          <span className='small light'>\n            {toComma(this.state.data.length)} entries\n          </span>\n          <IconButton\n            text={this.state.showMore ? 'collapse' : 'expand'}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={() => this.setState({ showMore: !this.state.showMore })}\n            tooltipText='Expand table'\n          />\n        </div>\n        <Table\n          containerClass={\n            this.state.showMore ? 'table_container_expanded' : 'table_container'\n          }\n          data={this.state.data}\n          defaultSortField='prediction'\n          defaultSortUp='true'\n          sortables={[true, true, true, true, true, true, false]}\n          searchAllFields={true}\n          fields={[\n            'disease_name',\n            'prediction',\n            'compound_percentile',\n            'disease_percentile',\n            'category',\n            'n_trials',\n            ''\n          ]}\n          headContents={[\n            'Name',\n            'Predic',\n            'Comp Pctl',\n            'Dis Pctl',\n            'Cat',\n            'Trials',\n            'Neo4j Actions'\n          ]}\n          headStyles={[\n            { width: 250 },\n            { width: 85 },\n            { width: 85 },\n            { width: 85 },\n            { width: 65 },\n            { width: 65 },\n            { width: 200 }\n          ]}\n          headClasses={[\n            'small left',\n            'small',\n            'small',\n            'small',\n            'small',\n            'small',\n            'small'\n          ]}\n          headTooltips={[\n            'Disease name',\n            'Prediction',\n            'Compound percentile',\n            'Disease percentile',\n            'Category',\n            'Number of trials',\n            'Neo4j browser'\n          ]}\n          bodyTooltips={[(datum, field, value) => datum.description]}\n          bodyContents={[\n            (datum, field, value) => <DynamicField value={value} />,\n            (datum, field, value) => (\n              <DynamicField\n                value={toFixed(value * 100) + '%'}\n                fullValue={value}\n              />\n            ),\n            (datum, field, value) => (\n              <DynamicField\n                value={toFixed(value * 100) + '%'}\n                fullValue={value}\n              />\n            ),\n            (datum, field, value) => (\n              <DynamicField\n                value={toFixed(value * 100) + '%'}\n                fullValue={value}\n              />\n            ),\n            (datum, field, value) => <DynamicField value={value} />,\n            (datum, field, value) => <DynamicField value={value} />,\n            (datum, field, value) => {\n              const id =\n                this.props.compound.compound_id +\n                '/' +\n                datum.disease_id.replace(':', '_') +\n                '.html';\n              const url =\n                'https://neo4j.het.io/browser/?cmd=play&arg=https://neo4j.het.io/guides/rep/' +\n                id;\n              const cmd = ':play https://neo4j.het.io/guides/rep/' + id;\n\n              return (\n                <>\n                  <IconButton\n                    className='small neo4j_button'\n                    icon={faExternalLinkAlt}\n                    text='browser'\n                    onClick={() => {\n                      const link = document.createElement('a');\n                      link.target = '_blank';\n                      link.href = url;\n                      link.click();\n                      link.remove();\n                    }}\n                  />\n                  <IconButton\n                    className='small neo4j_button clipboard_button'\n                    icon={faCopy}\n                    text='command'\n                    onClick={() => copy(cmd)}\n                  />\n                </>\n              );\n            }\n          ]}\n          bodyClasses={['left']}\n        />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\nimport { IconButton } from 'hetio-frontend-components';\nimport { DynamicField } from 'hetio-frontend-components';\nimport { Table } from 'hetio-frontend-components';\nimport { Button } from 'hetio-frontend-components';\nimport { toComma } from 'hetio-frontend-components';\nimport { toFixed } from 'hetio-frontend-components';\n\nexport class DiseaseTable extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n  }\n\n  // display component\n  render() {\n    return (\n      <section style={{ display: this.props.visible ? 'block' : 'none' }}>\n        <div className='table_attic'>\n          <span className='small light'>\n            {toComma(this.props.data.length)} entries\n          </span>\n          <IconButton\n            text={this.state.showMore ? 'collapse' : 'expand'}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={() => this.setState({ showMore: !this.state.showMore })}\n            tooltipText='Expand table'\n          />\n        </div>\n        <Table\n          containerClass={\n            this.state.showMore ? 'table_container_expanded' : 'table_container'\n          }\n          data={this.props.data}\n          defaultSortField='treats'\n          defaultSortUp='false'\n          sortables={[false, true, true, true, true, true]}\n          searchAllFields={true}\n          fields={[\n            '',\n            'disease_id',\n            'disease_name',\n            'treats',\n            'total_edges',\n            'auroc'\n          ]}\n          headContents={['', 'ID', 'Name', 'Treats', 'Edges', 'AUROC']}\n          headStyles={[\n            { width: 35 },\n            { width: 80 },\n            { width: 200 },\n            { width: 75 },\n            { width: 75 },\n            { width: 75 }\n          ]}\n          headClasses={[\n            '',\n            'small left',\n            'small left',\n            'small',\n            'small',\n            'small'\n          ]}\n          headTooltips={['', 'ID', 'Name', 'Treats', 'Edges', 'AUROC']}\n          bodyTooltips={[\n            (datum, field, value) =>\n              'See predictions for \"' +\n              datum.disease_name +\n              '\" \\n\\n (' +\n              datum.synonyms\n                .split(' | ')\n                .slice(0, 20)\n                .join(', ') +\n              ')',\n            null,\n            (datum, field, value) => datum.description\n          ]}\n          bodyContents={[\n            (datum, field, value) => (\n              <Button\n                className='check_button'\n                onClick={() => {\n                  this.props.setDisease(datum);\n                }}\n              >\n                {this.props.disease &&\n                datum.disease_id === this.props.disease.disease_id ? (\n                    <FontAwesomeIcon className='fa-xs' icon={faEye} />\n                  ) : (\n                    <FontAwesomeIcon\n                      className='fa-xs'\n                      style={{ opacity: 0.15 }}\n                      icon={faEye}\n                    />\n                  )}\n              </Button>\n            ),\n            (datum, field, value) => (\n              <DynamicField value={<code>{value}</code>} fullValue={value} />\n            ),\n            (datum, field, value) => <DynamicField value={value} />,\n            (datum, field, value) => <DynamicField value={value} />,\n            (datum, field, value) => (\n              <DynamicField value={toComma(value)} fullValue={value} />\n            ),\n            (datum, field, value) => (\n              <DynamicField\n                value={toFixed(value * 100) + '%'}\n                fullValue={value}\n              />\n            )\n          ]}\n          bodyClasses={[null, 'small left', 'left']}\n        />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\nimport copy from 'copy-to-clipboard';\n\nimport { IconButton } from 'hetio-frontend-components';\nimport { assembleData } from './data.js';\nimport { DynamicField } from 'hetio-frontend-components';\nimport { Table } from 'hetio-frontend-components';\nimport { toComma } from 'hetio-frontend-components';\nimport { toFixed } from 'hetio-frontend-components';\n\nconst dataUrl =\n  'https://raw.githubusercontent.com/dhimmel/het.io-rep-data/1a960f0e353586f8fe9f61b569919f24603d4344/browser-tables/disease/';\n\nexport class DiseasePredictionTable extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.data = [];\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (\n      (this.props.disease || {}).disease_id !==\n      (prevProps.disease || {}).disease_id\n    ) {\n      fetch(dataUrl + this.props.disease.disease_id.replace(':', '_') + '.json')\n        .then((results) => results.json())\n        .then((results) => {\n          this.setState({ data: assembleData(results) });\n        });\n    }\n  }\n\n  // display component\n  render() {\n    return (\n      <section style={{ display: this.props.visible ? 'block' : 'none' }}>\n        <div className='table_attic'>\n          <span className='small light'>\n            {toComma(this.state.data.length)} entries\n          </span>\n          <IconButton\n            text={this.state.showMore ? 'collapse' : 'expand'}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={() => this.setState({ showMore: !this.state.showMore })}\n            tooltipText='Expand table'\n          />\n        </div>\n        <Table\n          containerClass={\n            this.state.showMore ? 'table_container_expanded' : 'table_container'\n          }\n          data={this.state.data}\n          defaultSortField='prediction'\n          defaultSortUp='true'\n          sortables={[true, true, true, true, true, true, false]}\n          searchAllFields={true}\n          fields={[\n            'compound_name',\n            'prediction',\n            'compound_percentile',\n            'disease_percentile',\n            'category',\n            'n_trials',\n            ''\n          ]}\n          headContents={[\n            'Name',\n            'Predic',\n            'Comp Pctl',\n            'Dis Pctl',\n            'Cat',\n            'Trials',\n            'Neo4j Actions'\n          ]}\n          headStyles={[\n            { width: 250 },\n            { width: 85 },\n            { width: 85 },\n            { width: 85 },\n            { width: 65 },\n            { width: 65 },\n            { width: 200 }\n          ]}\n          headClasses={[\n            'small left',\n            'small',\n            'small',\n            'small',\n            'small',\n            'small',\n            'small'\n          ]}\n          headTooltips={[\n            'Disease name',\n            'Prediction',\n            'Compound percentile',\n            'Disease percentile',\n            'Category',\n            'Number of trials',\n            'Copy and paste this query into the Neo4j browser'\n          ]}\n          bodyTooltips={[(datum, field, value) => datum.description]}\n          bodyContents={[\n            (datum, field, value) => <DynamicField value={value} />,\n            (datum, field, value) => (\n              <DynamicField\n                value={toFixed(value * 100) + '%'}\n                fullValue={value}\n              />\n            ),\n            (datum, field, value) => (\n              <DynamicField\n                value={toFixed(value * 100) + '%'}\n                fullValue={value}\n              />\n            ),\n            (datum, field, value) => (\n              <DynamicField\n                value={toFixed(value * 100) + '%'}\n                fullValue={value}\n              />\n            ),\n            (datum, field, value) => <DynamicField value={value} />,\n            (datum, field, value) => <DynamicField value={value} />,\n            (datum, field, value) => {\n              const id =\n                datum.compound_id +\n                '/' +\n                this.props.disease.disease_id.replace(':', '_') +\n                '.html';\n              const url =\n                'https://neo4j.het.io/browser/?cmd=play&arg=https://neo4j.het.io/guides/rep/' +\n                id;\n              const cmd = ':play https://neo4j.het.io/guides/rep/' + id;\n\n              return (\n                <>\n                  <IconButton\n                    className='small neo4j_button'\n                    icon={faExternalLinkAlt}\n                    text='browser'\n                    onClick={() => {\n                      const link = document.createElement('a');\n                      link.target = '_blank';\n                      link.href = url;\n                      link.click();\n                      link.remove();\n                    }}\n                  />\n                  <IconButton\n                    className='small neo4j_button clipboard_button'\n                    icon={faCopy}\n                    text='command'\n                    onClick={() => copy(cmd)}\n                  />\n                </>\n              );\n            }\n          ]}\n          bodyClasses={['left']}\n        />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\nimport { IconButton } from 'hetio-frontend-components';\nimport { DynamicField } from 'hetio-frontend-components';\nimport { Table } from 'hetio-frontend-components';\nimport { toComma } from 'hetio-frontend-components';\nimport { toExponential } from 'hetio-frontend-components';\nimport { toFixed } from 'hetio-frontend-components';\n\nexport class MetapathTable extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  // display component\n  render() {\n    return (\n      <section style={{ display: this.props.visible ? 'block' : 'none' }}>\n        <div className='table_attic'>\n          <span className='small light'>\n            {toComma(this.props.data.length)} entries\n          </span>\n          <IconButton\n            text={this.state.showMore ? 'collapse' : 'expand'}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={() => this.setState({ showMore: !this.state.showMore })}\n            tooltipText='Expand table'\n          />\n        </div>\n        <Table\n          containerClass={\n            this.state.showMore ? 'table_container_expanded' : 'table_container'\n          }\n          defaultSortField='treats'\n          defaultSortUp='false'\n          data={this.props.data}\n          sortables={[true, true, true, true, true, true]}\n          fields={[\n            'metapath',\n            'verbose',\n            'length',\n            'delta_auroc',\n            'mlog10_pval_delta_auroc',\n            'coef'\n          ]}\n          headContents={[\n            'Abbrev',\n            'Metapath',\n            'Len',\n            <>&Delta; AUROC</>,\n            <>\n              <i>p</i>-value\n            </>,\n            'Coef'\n          ]}\n          headStyles={[\n            { width: 125 },\n            { width: 300 },\n            { width: 65 },\n            { width: 100 },\n            { width: 100 },\n            { width: 100 }\n          ]}\n          headClasses={[\n            'small',\n            'small left',\n            'small',\n            'small',\n            'small',\n            'small'\n          ]}\n          headTooltips={[\n            'Abbreviation',\n            'Metapath description',\n            'Metapath length',\n            'Percent change in AUROC',\n            'Negative log of p-value',\n            'Coefficient'\n          ]}\n          bodyContents={[\n            (datum, field, value) => <DynamicField value={value} />,\n            (datum, field, value) => <DynamicField value={value} />,\n            (datum, field, value) => <DynamicField value={value} />,\n            (datum, field, value) => (\n              <DynamicField\n                value={toFixed(value * 100) + '%'}\n                fullValue={value}\n              />\n            ),\n            (datum, field, value) => (\n              <DynamicField\n                value={toExponential(Math.pow(10, -value))}\n                fullValue={Math.pow(10, -value)}\n              />\n            ),\n            (datum, field, value) => <DynamicField value={value} />\n          ]}\n          bodyClasses={['small', 'left small']}\n        />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\n\nimport { toFixed } from 'hetio-frontend-components';\nimport { toComma } from 'hetio-frontend-components';\nimport { DynamicField } from 'hetio-frontend-components';\n\n// main app component\nexport class ItemInfo extends Component {\n  render() {\n    const item = this.props.item;\n    if (!item)\n      return <></>;\n\n    const name = item.compound_name || item.disease_name || '';\n    const fields = [\n      ['id', item.compound_id || item.disease_id || ''],\n      ['description', item.description || ''],\n      ['synonyms', item.synonyms || ''],\n      ['treats', item.treats],\n      ['palliates', item.palliates],\n      ['relationships', toComma(item.total_edges)],\n      ['auroc', toFixed((item.auroc || 0) * 100) + '%']\n    ];\n\n    return (\n      <>\n        <hr />\n        <section style={{ display: this.props.visible ? 'block' : 'none' }}>\n          <p className='left'>\n            Info about <span className='semibold'>{name}</span>:\n          </p>\n          <table className='info_table'>\n            <tbody>\n              {fields.map((field, index) => (\n                <tr key={index}>\n                  <td className='small left light'>{field[0]}</td>\n                  <td className='small left'>\n                    <DynamicField value={field[1]} />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </section>\n        <hr />\n        <p className='left'>\n          Predicted treatments for <span className='semibold'>{name}</span>:\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\n\nimport { Button } from 'hetio-frontend-components';\nimport { CompoundTable } from './compound-table.js';\nimport { CompoundPredictionTable } from './compound-prediction-table.js';\nimport { DiseaseTable } from './disease-table.js';\nimport { DiseasePredictionTable } from './disease-prediction-table.js';\nimport { MetapathTable } from './metapath-table.js';\nimport { ItemInfo } from './item-info.js';\nimport { fetchData } from './data.js';\n\nimport './app.css';\n\n// main app component\nexport class App extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.tab = 'compounds';\n    this.state.compound = null;\n    this.state.disease = null;\n    this.state.compounds = [];\n    this.state.diseases = [];\n    this.state.metapaths = [];\n\n    // listen for back/forward navigation (history)\n    window.addEventListener('popstate', this.loadStateFromUrl);\n\n    fetchData().then((results) => {\n      this.setState(\n        {\n          compounds: results.compounds,\n          diseases: results.diseases,\n          metapaths: results.metapaths\n        },\n        this.loadStateFromUrl\n      );\n    });\n  }\n\n  // set active tab\n  setTab = (tab) => {\n    this.setState({ tab: tab }, this.updateUrl);\n  };\n\n  // set selected compound\n  setCompound = (compound) => {\n    this.setState({ compound: compound }, this.updateUrl);\n  };\n\n  // set selected disease\n  setDisease = (disease) => {\n    this.setState({ disease: disease }, this.updateUrl);\n  };\n\n  // update url based on state\n  updateUrl = () => {\n    const params = new URLSearchParams();\n    params.set('tab', this.state.tab);\n    if (this.state.tab === 'compounds' && this.state.compound)\n      params.set('id', this.state.compound.compound_id);\n    if (this.state.tab === 'diseases' && this.state.disease)\n      params.set('id', this.state.disease.disease_id.replace(':', '_'));\n\n    const url =\n      window.location.origin +\n      window.location.pathname +\n      '?' +\n      params.toString();\n    window.history.pushState({}, '', url);\n\n    if (params.get('id'))\n      document.title = params.get('id');\n  };\n\n  // load state from url\n  loadStateFromUrl = () => {\n    const params = new URLSearchParams(window.location.search);\n    const newState = {};\n    if (params.get('tab'))\n      newState.tab = params.get('tab');\n    let id = params.get('id');\n    if (newState.tab === 'compounds') {\n      newState.compound = this.state.compounds.find(\n        (compound) => compound.compound_id === id\n      );\n    }\n    if (newState.tab === 'diseases') {\n      if (id)\n        id = id.replace('_', ':');\n      newState.disease = this.state.diseases.find(\n        (disease) => disease.disease_id === id\n      );\n    }\n\n    this.setState(newState);\n  };\n\n  // display component\n  render() {\n    return (\n      <>\n        {/* load global, site-wide styles from het.io */}\n        <link\n          rel='stylesheet'\n          type='text/css'\n          href='https://het.io/global.css'\n        />\n        <Button\n          className='tab_button'\n          disabled={this.state.tab !== 'compounds'}\n          onClick={() => this.setTab('compounds')}\n        >\n          Compounds\n        </Button>\n        <Button\n          className='tab_button'\n          disabled={this.state.tab !== 'diseases'}\n          onClick={() => this.setTab('diseases')}\n        >\n          Diseases\n        </Button>\n        <Button\n          className='tab_button'\n          disabled={this.state.tab !== 'metapaths'}\n          onClick={() => this.setTab('metapaths')}\n        >\n          Metapaths\n        </Button>\n\n        <CompoundTable\n          data={this.state.compounds}\n          visible={this.state.tab === 'compounds'}\n          setCompound={this.setCompound}\n          compound={this.state.compound}\n        />\n        <DiseaseTable\n          data={this.state.diseases}\n          visible={this.state.tab === 'diseases'}\n          setDisease={this.setDisease}\n          disease={this.state.disease}\n        />\n        <ItemInfo\n          visible={\n            this.state.tab === 'compounds' || this.state.tab === 'diseases'\n          }\n          item={\n            this.state.tab === 'compounds'\n              ? this.state.compound\n              : this.state.tab === 'diseases'\n                ? this.state.disease\n                : null\n          }\n        />\n        <CompoundPredictionTable\n          visible={this.state.tab === 'compounds' && this.state.compound}\n          compound={this.state.compound}\n        />\n        <DiseasePredictionTable\n          visible={this.state.tab === 'diseases' && this.state.disease}\n          disease={this.state.disease}\n        />\n        <MetapathTable\n          data={this.state.metapaths}\n          visible={this.state.tab === 'metapaths'}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { App } from './app';\n\n// render/run app\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}